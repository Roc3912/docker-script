user  nginx;
# This number should be, at maximum, the number of CPU cores on your system.
worker_processes auto;

error_log  /var/log/nginx/error.log error;
pid        /var/run/nginx.pid;


events {
    # The effective method, used on Linux 2.6+, optmized to serve many clients with each thread.
    use epoll;
    # Determines how many clients will be served by each worker process.
    worker_connections 4000;
    # Accept as many connections as possible, after nginx gets notification about a new connection.
    multi_accept on;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    #long time
    check_shm_size 5M;
    # Allow the server to close the connection after a client stops responding.
    reset_timedout_connection on;
    client_header_timeout 15;
    # Send the client a "request timed out" if the body is not loaded by this time.
    client_body_timeout 10;
    # If the client stops reading data, free up the stale client connection after this much time.
    send_timeout 15;
    # Timeout for keep-alive connections. Server will close connections after this time.
    keepalive_timeout 30;
    # Number of requests a client can make over the keep-alive connection.
    keepalive_requests 30;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    log_format json escape=json '{'
                    '"remote_addr": "$remote_addr", '
                    '"request_uri": "$request_uri", '
                    '"request_length": "$request_length", '
                    '"request_time": "$request_time", '
                    '"request_method": "$request_method", '
                    '"status": "$status", '
                    '"body_bytes_sent": "$body_bytes_sent", '
                    '"http_referer": "$http_referer", '
                    '"http_user_agent": "$http_user_agent", '
                    '"http_x_forwarded_for": "$http_x_forwarded_for", '
                    '"http_host": "$http_host", '
                    '"server_name": "$server_name", '
                    '"upstream": "$upstream_addr", '
                    '"upstream_response_time": "$upstream_response_time", '
                    '"upstream_status": "$upstream_status", '
                    #'"geoip_country_code": "$geoip2_data_country_code", '
                    #'"geoip_country_name": "$geoip2_data_country_name", '
                    #'"geoip_city_name": "$geoip2_data_city_name"'
                    '}';

    client_body_buffer_size 128k;
    client_max_body_size 10m;
    proxy_read_timeout 180s;

    # Compression.
    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "msie6";

    # Sendfile copies data between one FD and other from within the kernel.
    sendfile on;
    # Don't buffer data-sends (disable Nagle algorithm).
    tcp_nodelay on;
    # Causes nginx to attempt to send its HTTP response head in one packet,  instead of using partial frames.
    tcp_nopush on;


    # Hide web server information
    server_tokens off;
    server_info off;
    server_tag off;

    # redirect server error pages to the static page
    error_page 404             /404.html;
    error_page 500 502 503 504 /50x.html;

    #geoip2 /etc/nginx/geoip2/GeoLite2-City.mmdb {
    #    $geoip2_data_country_code country iso_code; #字符显示国家
    #    $geoip2_data_city_name city names zh-CN; #中文显示城市名
    #    $geoip2_data_country_name country names zh-CN; #中文显示国家名
    #}
    include /etc/nginx/conf.d/*.conf;
}